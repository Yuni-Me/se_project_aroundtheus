!function(){"use strict";const e=document.querySelector("#profile-edit-button"),t=document.querySelector(".profile__image-button"),s="#edit-modal",r=document.querySelector(s).querySelector("#name-input"),i=document.querySelector(s).querySelector("#description-input"),n=document.querySelector("#profile-add-button"),o=(document.forms["card-form"],document.forms["profile-form"],document.forms["confirm-form"],document.forms["change-form"],"#card-template"),a=document.querySelector(".modal__image-preview"),l=document.querySelector(".modal__image-title");class c{constructor(e,t,s,r,i,n){this._name=e.name,this._link=e.link,this._cardId=e._id,this._myId=t,this._likes=e.likes,this._userId=e.likes._id,this._ownerId=e.owner._id,this._cardLikes=this._likes.length,this._cardSelector=s,this._handleCardClick=r,this._handleTrashIcon=i,this._handleLikeClick=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_fillCard(){this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardElement.querySelector(".card__text").textContent=this._name,this._cardElement.id=this._cardId,this._likeButton=this._cardElement.querySelector(".card__like-button"),this._likeCounter=this._cardElement.querySelector(".card__like-counter"),this._trashButton=this._cardElement.querySelector(".card__trash-button")}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._trashButton.addEventListener("click",(e=>{e.preventDefault(),this._handleTrashIcon({_id:this._cardId})})),this._cardImage.addEventListener("click",(()=>{this._handleCardClick({name:this._name,link:this._link})}))}_setTrashIcon(){this._ownerId!==this._myId&&this._trashButton.remove()}_updateLikes(e){this._likeCounter.textContent=this._likes.length,this.cardIsLiked(e)?this._likeButton.classList.add("card__like-button_liked"):this._likeButton.classList.remove("card__like-button_liked")}cardIsLiked(){return this._likes.some((e=>e._id===this._myId))}setLikeCounter(e){this._likes=e,this._updateLikes(e)}getView(){return this._cardElement=this._getTemplate(),this._fillCard(),this._updateLikes(),this._setTrashIcon(),this._setEventListeners(),this._cardElement}}class d{constructor(e,t){this._form=t,this._inputElements=Array.from(this._form.querySelectorAll(e.inputSelector)),this._submitButton=this._form.querySelector(e.submitButtonSelector),this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_isFoundInvalid(){return!this._inputElements.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._isFoundInvalid(this._inputElements)?this.disableButton():this._enableButton()}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class h{constructor(e){let{popupSelector:t}=e;this.popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._closeClickButton=this._closeClickButton.bind(this)}open(){this.popup.classList.add("modal__opened"),this._setEventListeners()}close(){this.popup.classList.remove("modal__opened"),document.removeEventListener("keydown",this._handleEscClose),this.popup.removeEventListener("click",this._closeClickButton)}_handleEscClose(e){"Escape"===e.key&&this.close()}_closeClickButton(e){(e.target.classList.contains("modal__opened")||e.target.classList.contains("modal__close"))&&this.close()}_setEventListeners(){this.popup.addEventListener("click",this._closeClickButton),document.addEventListener("keydown",this._handleEscClose)}}class _ extends h{constructor(e,t){super({popupSelector:e}),this._popupForm=this.popup.querySelector(".modal__form"),this._handleFormSubmit=t,this._submitButton=this._popupForm.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent,this._inputs=Array.from(this._popupForm.querySelectorAll(".modal__input"))}open(){super.open(),this._setEventListeners()}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}_handleSubmit=()=>{const e=this._getInputValues();this._handleFormSubmit(e)};renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}hideLoading(e){this._submitButton.textContent=e}_setEventListeners(){this._popupForm.addEventListener("submit",this._handleSubmit),super._setEventListeners()}close(){super.close(),this._popupForm.reset(),this._popupForm.removeEventListener("submit",this._handleSubmit)}}class u{constructor(e,t){let{data:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this.addItem(this._renderer(e))}))}addItem(e){this._container.append(e)}prependCard(e){this._container.prepend(e)}removeItem(e){let{_id:t}=e;document.getElementById(t).remove()}}const m=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s,this._avatar={link:"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPBc4IbrWzxh3_z-xVsrhjE3gGnbqpDEM9dm4MlCrWCpNjUByptghWQQUc6N0hmY24-cQ&usqp=CAU"}}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}async _request(e,t){return fetch(e,t).then(this._checkResponse)}async getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>this._checkResponse(e)))}async getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>this._checkResponse(e)))}async editUserProfile(e){let{title:t,description:s}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})})}async addCard(e){let{title:t,link:s}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})})}async deleteCard(e){let{_id:t}=e;return this._request(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers})}async changeLikeStatus(e,t){return this._request(`${this._baseUrl}/cards/likes/${e}`,{method:t?"DELETE":"PUT",headers:this._headers})}async updateAvatarPicture(e){return this._request(`${this._baseUrl}/users/me/avatar/`,{method:"PATCH",creadentials:"same-origin",headers:this._headers,body:JSON.stringify({avatar:e})})}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"0fe9b689-fa89-45da-98e3-26ffd27d7799","Content-Type":"application/json"}}),p=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:r}=e;this._name=document.querySelector(t),this._job=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e){let{name:t,about:s,avatar:r,_id:i}=e;this._name.textContent=t,this._job.textContent=s,this._avatar.src=r,this._avatar.alt=t,this._userId=i}}({nameSelector:".profile__title",jobSelector:".profile__description",avatarSelector:".profile__image"}),v=new _("#add-modal",(function(e){v.renderLoading(!0,"Creating..."),m.addCard(e).then((e=>{const t=q(e);S.prependCard(t),v.close()})).catch(console.error).finally((()=>{v.renderLoading(!1,"Create")}))})),f=new _("#edit-modal",(function(e){f.renderLoading(!0),m.editUserProfile(e).then((e=>{p.setUserInfo(e),f.close()})).catch(console.error).finally((()=>{f.renderLoading(!1,"Save")}))})),b=new class extends h{constructor(e,t,s){super({popupSelector:e}),this._imageItemPreview=t,this._titleItemPreview=s}open(e){let{name:t,link:s}=e;this._imageItemPreview.src=s,this._imageItemPreview.alt=t,this._titleItemPreview.textContent=t,super.open()}}("#image-modal",a,l),E=new class extends h{constructor(e,t){super({popupSelector:e}),this._popupForm=this.popup.querySelector(".modal__form"),this._saveButton=this._popupForm.querySelector("#confirm-button-modal"),this._saveButtonText=this._saveButton.textContent,this._handleFormSubmit=t}open(e){super.open(),this._item=e}_handleSubmit=e=>{e.preventDefault(),this._handleFormSubmit(this._item)};renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Deleting...";this._saveButton.textContent=e?t:this._saveButtonText}_setEventListeners(){super._setEventListeners(),this._popupForm.addEventListener("submit",this._handleSubmit)}close(){super.close(),this._popupForm.removeEventListener("submit",this._handleSubmit)}}("#confirm-modal",(function(e){m.deleteCard(e).then((()=>{S.removeItem(e),E.close()})).catch(console.error)})),k=new _("#change-modal",(function(e){k.renderLoading(!0),m.updateAvatarPicture(e.link).then((e=>{p.setUserInfo(e),k.close()})).catch(console.error).finally((()=>{k.renderLoading(!1,"Save")}))}));let S,y;Promise.all([m.getUserInfo(),m.getInitialCards()]).then((e=>{let[t,s]=e;y=t._id,p.setUserInfo(t),S=new u({data:s,renderer:q},".cards__list"),S.renderItems(s)})).catch(console.error);const C={};var g;function L(e){const t=e.cardIsLiked();m.changeLikeStatus(e._cardId,t).then((t=>{e.setLikeCounter(t.likes)})).catch(console.error)}function I(e){E.open(e)}function B(e){b.open(e)}function q(e){return new c(e,y,o,B,I,L).getView()}g={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(g.formSelector)).forEach((e=>{const t=new d(g,e),s=e.getAttribute("name");C[s]=t,t.enableValidation()})),n.addEventListener("click",(function(){v.open(),C["card-form"].resetValidation()})),e.addEventListener("click",(function(){const e=p.getUserInfo();r.value=e.name,i.value=e.job,f.open(),C["profile-form"].resetValidation()})),t.addEventListener("click",(function(){k.open(),C["change-form"].resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,